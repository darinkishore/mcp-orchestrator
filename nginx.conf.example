# MCP Orchestrator Nginx Configuration
# Place this in /etc/nginx/sites-available/mcp-orchestrator
# Then symlink: sudo ln -s /etc/nginx/sites-available/mcp-orchestrator /etc/nginx/sites-enabled/

# HTTP redirect to HTTPS
server {
    listen 80;
    server_name mcp.yourdomain.com;
    
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS configuration
server {
    listen 443 ssl http2;
    server_name mcp.yourdomain.com;
    
    # SSL certificates (obtain with certbot/Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/mcp.yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mcp.yourdomain.com/privkey.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # HSTS (optional but recommended)
    add_header Strict-Transport-Security "max-age=63072000" always;
    
    # Main MCP endpoint
    location /mcp {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SSE (Server-Sent Events) specific settings
        proxy_buffering off;
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
        keepalive_timeout 86400s;
        
        # Disable buffering for real-time responses
        proxy_request_buffering off;
        
        # Allow large payloads
        client_max_body_size 50M;
    }
    
    # Health check endpoint
    location /healthz {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        
        # Quick timeout for health checks
        proxy_read_timeout 5s;
        proxy_connect_timeout 5s;
    }
    
    # Optional: Serve a simple landing page
    location / {
        return 200 '{"service": "MCP Orchestrator", "status": "operational"}';
        add_header Content-Type application/json;
    }
}

# Rate limiting (optional but recommended)
limit_req_zone $binary_remote_addr zone=mcp_limit:10m rate=10r/s;
limit_req zone=mcp_limit burst=20 nodelay;